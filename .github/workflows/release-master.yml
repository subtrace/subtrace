name: release-master

on:
  push:
    branches: ["master"]

jobs:
  subtrace-binary:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/download-artifact@v4
      with:
        name: devtools.js.gz
        path: ./devtools/bundle
        github-token: ${{ secrets.SUBTRACE_ARTIFACT_DOWNLAOD_TOKEN }}
        run-id: 13095030874
    - run: |
        set -e

        version=$(printf "b%03d" "$(git log --oneline | wc -l)")
        echo "version=${version}"

        for os in linux darwin; do
          for arch in amd64 arm64; do
            echo "GOOS=${os} GOARCH=${arch}"
            GOOS=${os} GOARCH=${arch} time make subtrace
            mv subtrace subtrace-${os}-${arch}
          done
        done

        echo "metadata:"
        file subtrace-*
        sha256sum subtrace-*

        echo "creating releasing"
        release_id=$(
          time curl -sL -X POST "https://api.github.com/repos/subtrace/subtrace/releases" \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -d '{"tag_name":"'${version}'","target_commitish":"master","name":"'${version}'"}' \
            | tee /dev/stderr \
            | jq -r '.id'
        )
        echo "release_id=${release_id}"

        for file in subtrace-*; do
          echo "uploading ${file}"
          time curl -sL -X POST "https://uploads.github.com/repos/subtrace/subtrace/releases/${release_id}/assets?name=${file}" \
              -H "Content-Type: application/octet-stream" \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              --data-binary "@${file}"
        done

        for os in linux; do
          for arch in amd64 arm64; do
            cp "subtrace-${os}-${arch}" ./etc/python/subtrace
            cp "subtrace-${os}-${arch}" ./etc/node
          done
        done

        echo "installing pypi package build deps"
        pip3 install build twine --break-system-packages
        python3 -m build --version
        python3 -m twine --version

        echo "building pypi package"
        cd ./etc/python
        for f in * subtrace/*; do sha256sum $f 2>/dev/null || true; done
        make wheel
        sha256sum dist/*
        TWINE_USERNAME=__token__ TWINE_PASSWORD=${{ secrets.SUBTRACE_PYPI_API_TOKEN }} python3 -m twine upload dist/*
        cd ../..

        echo "building node package"
        cd ./etc/node
        for f in *; do sha256sum $f 2>/dev/null || true; done
        make pack
        sha256sum *.tgz
        rm *.tgz
        npm set //registry.npmjs.org/:_authToken=${{ secrets.SUBTRACE_NPM_PUBLISH_TOKEN }}
        make publish
        cd ../..

  worker-docker:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: build
      run: |
        set -e

        version=$(printf "b%03d" "$(git log --oneline | wc -l)")
        echo "version=${version}"

        echo "docker login"
        docker login ghcr.io -u "${{ github.actor }}" --password "${{ secrets.GITHUB_TOKEN }}"

        echo "docker build"
        docker buildx create --use
        time docker buildx build . --push \
            --file worker.Dockerfile \
            --progress plain \
            --platform linux/amd64,linux/arm64 \
            --tag ghcr.io/subtrace/worker:${version} \
            --tag ghcr.io/subtrace/worker:latest
